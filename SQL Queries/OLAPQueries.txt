SELECT pick_up_location, MONTHNAME(PickUpTime) AS month, ROUND(d.rating, 1) AS driver_rating, COUNT(*) AS num_trips
FROM TripRecords tr
JOIN bookings b ON tr.booking_id = b.booking_id
JOIN drivers d ON d.cab_id = b.cab_id
GROUP BY pick_up_location, month, driver_rating
HAVING pick_up_location IS NOT NULL AND driver_rating IS NOT NULL
ORDER BY num_trips DESC
LIMIT 5;
-- Identify the top 5 pick-up locations by number of trips, broken down by month and driver rating.

SELECT pick_up_location, COUNT(trip_id) AS total_trips
FROM TripRecords
WHERE YEAR(PickUpTime) = 2023
GROUP BY pick_up_location;
-- Determine total number of trips taken from each place

SELECT CONCAT(c.FName, ' ', c.LName) AS customer_name, SUM(tr.dist) AS total_distance 
FROM TripRecords tr 
JOIN bookings b ON tr.booking_id = b.booking_id 
JOIN Customer_Records c ON b.user_id = c.Id 
WHERE YEAR(DropOffTime) = 2023 AND QUARTER(DropOffTime) = 1
GROUP BY CONCAT(c.FName, ' ', c.LName) 
ORDER BY total_distance DESC 
LIMIT 3;
-- Gives list of top 3 customers who have longest trips fir particular quarter of year

SELECT HOUR(PickUpTime) AS hour_of_day, AVG(TIMESTAMPDIFF(MINUTE, PickUpTime, DropOffTime)) AS avg_trip_duration
FROM TripRecords
WHERE YEAR(PickUpTime) = 2023 AND MONTH(PickUpTime) = 2
GROUP BY HOUR(PickUpTime)
ORDER BY hour_of_day asc;
-- Give average trip duration on each hour of day 

SELECT d.name, c.type, COUNT(tr.trip_id) AS num_trips
FROM drivers d
JOIN cabs c ON c.cab_id = d.cab_id
JOIN bookings b ON b.cab_id = c.cab_id
JOIN TripRecords tr ON tr.booking_id = b.booking_id
GROUP BY d.name, c.type WITH ROLLUP
HAVING GROUPING(d.name) = 0 AND GROUPING(c.type) = 0;
-- Number of trips made by each driver with each cab 

SELECT 
    d.name,
    c.type,
    COUNT(tr.trip_id) AS num_trips,
    SUM(b.fare) AS revenue
FROM drivers d
JOIN cabs c ON c.cab_id = d.cab_id
JOIN bookings b ON b.cab_id = c.cab_id
LEFT JOIN TripRecords tr ON tr.booking_id = b.booking_id
GROUP BY d.name, c.type WITH ROLLUP
HAVING (GROUPING(d.name) = 0 OR GROUPING(c.type) = 0) AND (c.type IS NOT NULL AND d.name IS NOT NULL);
-- For each combination of driver and cab type, showing the number of trips and revenue generated for that combination





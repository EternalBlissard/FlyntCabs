1. Number of Cabs Booked by user/customer in the last 3 months:

SELECT c.FName, c.LName, COUNT(*) AS total_bookings
FROM customer_records c
JOIN bookings b ON c.Id = b.user_id
WHERE b.bookingtime >= DATE_SUB(NOW(), INTERVAL 3 MONTH)
GROUP BY c.Id
ORDER BY total_bookings DESC;
drop database f1yntcabs;

2. Driver and Cab details for the driver who are currently driving:

SELECT d.*, c. *
FROM drivers d
INNER JOIN cabs c ON d.cab_id = c.cab_id
WHERE d.status = 'active';

3. Customer with 0 booking till date:

SELECT *
FROM customer c
WHERE c.Id NOT IN (SELECT user_id FROM bookings);

4. Number of Bookings by a single customer:

SELECT c.*, COUNT(b.booking_id) AS total_bookings
FROM customer c
LEFT JOIN bookings b ON c.Id = b.user_id
GROUP BY c.Id;

5. Driver with no booking in the last 24 hours:

SELECT *
FROM cabs c
WHERE NOT EXISTS (
SELECT 1 FROM bookings b
WHERE b.cab_id = c.cab_id AND b.booking >= DATE_SUB(NOW(),INTERVAL 24 HOUR));

6. Total revenue generated by the cab in an year:(in this case cab_id=1)

SELECT SUM(b.fare) AS total_revenue
FROM bookings b
WHERE b.date >= DATE_SUB(NOW(), INTERVAL 1 YEAR) AND
b.cab_id = 1 -- sample cab id;

7. Details with Fare higher than avg:

Select u.FName, u.PrimaryPhone, b.bookingtime
FROM customer_records AS u
INNER JOIN Bookings AS b ON u.id = b.user_id
WHERE b.bookingtime >= date_add(NOW(), INterval 1 day) & fare > (
SELECT AVG(fare) FROM bookings);

8. Deletes cabs as well as drivers for car older than 2008:
DELETE C, d FROM Cabs AS C INNER JOIN drivers AS d WHERE
C.cab_id=d.driver_id & C.year<2008 




